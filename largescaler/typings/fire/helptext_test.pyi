"""
This type stub file was generated by pyright.
"""

from fire import testutils

"""Tests for the helptext module."""
class HelpTest(testutils.BaseTestCase):
  def setUp(self): # -> None:
    ...
  
  def testHelpTextNoDefaults(self): # -> None:
    ...
  
  def testHelpTextNoDefaultsObject(self): # -> None:
    ...
  
  def testHelpTextFunction(self): # -> None:
    ...
  
  def testHelpTextFunctionWithDefaults(self): # -> None:
    ...
  
  def testHelpTextFunctionWithLongDefaults(self): # -> None:
    ...
  
  def testHelpTextFunctionWithKwargs(self): # -> None:
    ...
  
  def testHelpTextFunctionWithKwargsAndDefaults(self): # -> None:
    ...
  
  def testHelpTextFunctionWithDefaultsAndTypes(self): # -> None:
    ...
  
  def testHelpTextFunctionWithTypesAndDefaultNone(self): # -> None:
    ...
  
  def testHelpTextFunctionWithTypes(self): # -> None:
    ...
  
  def testHelpTextFunctionWithLongTypes(self): # -> None:
    ...
  
  def testHelpTextFunctionWithBuiltin(self): # -> None:
    ...
  
  def testHelpTextFunctionIntType(self): # -> None:
    ...
  
  def testHelpTextEmptyList(self): # -> None:
    ...
  
  def testHelpTextShortList(self): # -> None:
    ...
  
  def testHelpTextInt(self): # -> None:
    ...
  
  def testHelpTextNoInit(self): # -> None:
    ...
  
  def testHelpTextKeywordOnlyArgumentsWithDefault(self): # -> None:
    ...
  
  def testHelpTextKeywordOnlyArgumentsWithoutDefault(self): # -> None:
    ...
  
  def testHelpTextFunctionMixedDefaults(self): # -> None:
    ...
  
  def testHelpScreen(self): # -> None:
    ...
  
  def testHelpScreenForFunctionDocstringWithLineBreak(self): # -> None:
    ...
  
  def testHelpScreenForFunctionFunctionWithDefaultArgs(self): # -> None:
    ...
  
  def testHelpTextUnderlineFlag(self): # -> None:
    ...
  
  def testHelpTextBoldCommandName(self): # -> None:
    ...
  
  def testHelpTextObjectWithGroupAndValues(self): # -> None:
    ...
  
  def testHelpTextNameSectionCommandWithSeparator(self): # -> None:
    ...
  
  def testHelpTextNameSectionCommandWithSeparatorVerbose(self): # -> None:
    ...
  
  def testHelpTextMultipleKeywoardArgumentsWithShortArgs(self): # -> None:
    ...
  


class UsageTest(testutils.BaseTestCase):
  def testUsageOutput(self): # -> None:
    ...
  
  def testUsageOutputVerbose(self): # -> None:
    ...
  
  def testUsageOutputMethod(self): # -> None:
    ...
  
  def testUsageOutputFunctionWithHelp(self): # -> None:
    ...
  
  def testUsageOutputFunctionWithDocstring(self): # -> None:
    ...
  
  def testUsageOutputFunctionMixedDefaults(self): # -> None:
    ...
  
  def testUsageOutputCallable(self): # -> None:
    ...
  
  def testUsageOutputConstructorWithParameter(self): # -> None:
    ...
  
  def testUsageOutputConstructorWithParameterVerbose(self): # -> None:
    ...
  
  def testUsageOutputEmptyDict(self): # -> None:
    ...
  
  def testUsageOutputNone(self): # -> None:
    ...
  
  def testInitRequiresFlagSyntaxSubclassNamedTuple(self): # -> None:
    ...
  


if __name__ == '__main__':
  ...
